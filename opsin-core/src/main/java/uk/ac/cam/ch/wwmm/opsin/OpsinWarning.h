#pragma once

#include <string>

namespace uk
{
	namespace ac
	{
		namespace cam
		{
			namespace ch
			{
				namespace wwmm
				{
					namespace opsin
					{

						/// <summary>
						/// A warning generated by OPSIN while interpreting a name.<br>
						/// The specifics of the warning may be used to judge whether you want to accept the generated structure.
						/// </summary>
						class OpsinWarning
						{

							/// <summary>
							/// The type of problem OPSIN encountered
							/// </summary>
						public:
							enum class OpsinWarningType
							{
								/// <summary>
								///OPSIN ignored stereochemistry from the input name to give this structure. This can have various causes<br>:
								/// OPSIN doesn't support interpretation of the type of stereochemistry
								/// OPSIN stereo-perception doesn't support this type of stereocentre
								/// The name describes the wrong structure
								/// The stereochemistry is being requested at the wrong atom/bond 
								/// </summary>
//JAVA TO C++ CONVERTER TODO TASK: Enum values cannot be strings in C++:
								STEREOCHEMISTRY_IGNORED(L"Stereochemical term ignored"),
								/// <summary>
								///OPSIN made a choice that appeared to be ambiguous to give this structure i.e. the name may describe multiple possible structures<br>
								/// The name may be missing locants<br>
								/// Alternatively the name could actually be a trivial rather than systematic name<br>
								/// OPSIN tries to make sensible choices when choosing in ambiguous cases so the resultant structure may nonetheless be the intended one
								/// </summary>
//JAVA TO C++ CONVERTER TODO TASK: Enum values cannot be strings in C++:
								APPEARS_AMBIGUOUS(L"This names appears to be ambiguous");

//JAVA TO C++ CONVERTER TODO TASK: Enums cannot contain fields in C++:
//								private final String explanation;

//JAVA TO C++ CONVERTER TODO TASK: Enums cannot contain methods in C++:
//								private OpsinWarningType(String explanation)
						//		{
						//			this.explanation = explanation;
						//		}

//JAVA TO C++ CONVERTER TODO TASK: Enums cannot contain methods in C++:
//								public String getExplanation()
						//		{
						//			return explanation;
						//		}

							};

						private:
							const OpsinWarningType type;
							const std::wstring message;

						public:
							OpsinWarning(OpsinWarningType type, const std::wstring &message);

							/// <returns> The type of the warning c.f. <seealso cref="OpsinWarningType"/> </returns>
							virtual OpsinWarningType getType();

							/// <returns> The message describing the specific cause of this warning </returns>
							virtual std::wstring getMessage();
						};

					}
				}
			}
		}
	}
}
